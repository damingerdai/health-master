name: daming health master ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY_NAME: github.com

jobs:
  front:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        node-version: [22.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Nodejs ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn,lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install, Lint And Build
        run: npm install -g yarn && cd web && yarn --frozen-lockfile && yarn lint && yarn build
  end:
    runs-on: ${{ matrix.os }}
    needs: [front]
    strategy:
      fail-fast: true
      matrix:
        go-version: ["1.23.3"]
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Setup go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: go fmt check
        run: sh scripts/gofmtcheck.sh
      - name: build
        run: go build -o main main.go
  build-front-docker:
    runs-on: ubuntu-latest
    needs: [front]
    steps:
      - uses: actions/checkout@master
      - name: Build docker
        id: build-docker-web
        run: |
          cd web && docker build . -t ${{ env.REGISTRY_NAME }}/damingerdai/health-master-web:${{ github.sha }} -f Dockerfile
      - name: Image digest
        run: echo ${{ steps.build-docker-web.outputs.digest }}
  build-end-docker:
    runs-on: ubuntu-latest
    needs: [end]
    steps:
      - uses: actions/checkout@master
      - name: Build docker
        id: build-docker
        run: |
          docker build . -t ${{ env.REGISTRY_NAME }}/damingerdai/health-master:${{ github.sha }} -f Dockerfile
      - name: Image digest
        run: echo ${{ steps.build-docker.outputs.digest }}
